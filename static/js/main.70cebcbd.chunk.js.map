{"version":3,"sources":["img/logo.png","components/Header.js","components/Character.js","img/spinner.gif","components/Spinner.js","components/CharactersGrid.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Header","handleSearch","className","src","logo","alt","onChange","e","target","value","placeholder","Character","character","img","name","portrayed","nickname","birthday","status","Spinner","spinner","CharactersGrid","showSpinner","data","map","char_id","activated","cursor","pointerEvents","textDecoration","Pagination","cardsPerPage","totalCards","changePage","currentPage","pageNumbers","console","log","Math","ceil","i","push","aria-label","number","style","onClick","href","App","useState","setCurrentPage","characters","setCharacters","isLoading","setisLoading","query","setQuery","useEffect","apiUrl","a","axios","get","resp","getData","indexOfLastCard","indexOfirstCard","currentCards","slice","length","pageNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70cebcbd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport logo from \"../img/logo.png\";\r\nconst Header = ({ handleSearch }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"logo-div\">\r\n\t\t\t\t<img src={logo} alt=\"logo\" />\r\n\t\t\t</div>\r\n\t\t\t<input\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\thandleSearch(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tclassName=\"form-control search\"\r\n\t\t\t\tplaceholder=\"Type to search...\"></input>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","const Character = ({ character }) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card-inner\">\r\n\t\t\t\t<div className=\"card-front\">\r\n\t\t\t\t\t<img src={character.img} alt={character.name} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-back\">\r\n\t\t\t\t\t<h1> {character.name} </h1>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<strong> Actor Name: </strong> {character.portrayed}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<strong> Nickname: </strong> {character.nickname}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<strong> Birthday: </strong> {character.birthday}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<strong> Status: </strong> {character.status}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Character;\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import spinner from \"../img/spinner.gif\";\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<div className=\"spinner-div\">\r\n\t\t\t<img className=\"spinner\" src={spinner} alt=\"loading...\" />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Spinner;\r\n","import Character from \"./Character\";\r\nimport Spinner from \"./Spinner\";\r\nconst CharactersGrid = ({ showSpinner, data }) => {\r\n\t// if data is loading show spinner loading when data is available show content\r\n\treturn showSpinner ? (\r\n\t\t<Spinner />\r\n\t) : (\r\n\t\t<section className=\"cards\">\r\n\t\t\t{data.map((character) => {\r\n\t\t\t\treturn <Character key={character.char_id} character={character} />;\r\n\t\t\t})}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default CharactersGrid;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nconst Pagination = ({ cardsPerPage, totalCards, changePage, currentPage }) => {\r\n\tconst pageNumbers = [];\r\n\tconsole.log(\"im at pagination\");\r\n\tconsole.log(Math.ceil(totalCards / cardsPerPage), totalCards);\r\n\tfor (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\r\n\t\tconsole.log(i);\r\n\t\tpageNumbers.push(i);\r\n\t}\r\n\treturn (\r\n\t\t// <div className=\"pagination\">\r\n\t\t<nav aria-label=\"...\" className=\"pagination-nav\">\r\n\t\t\t<ul className=\"pagination\">\r\n\t\t\t\t{pageNumbers.map((number) => {\r\n\t\t\t\t\tconsole.log(number, \"hh\");\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={number}\r\n\t\t\t\t\t\t\tclassName=\"page-item\"\r\n\t\t\t\t\t\t\t// if the page active is the same as the current page disable some styles\r\n\t\t\t\t\t\t\tstyle={currentPage === number ? activated : {}}>\r\n\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\tonClick={() => changePage(number)}\r\n\t\t\t\t\t\t\t\tclassName=\"page-link\"\r\n\t\t\t\t\t\t\t\thref=\"!#\">\r\n\t\t\t\t\t\t\t\t{number}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t\t// </div>\r\n\t);\r\n};\r\n// style for active page\r\nconst activated = {\r\n\tcursor: \"default\",\r\n\tpointerEvents: \"none\",\r\n\ttextDecoration: \"none\",\r\n};\r\n\r\nexport default Pagination;\r\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./components/Header\";\nimport CharactersGrid from \"./components/CharactersGrid\";\nimport Pagination from \"./components/Pagination\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nconst App = () => {\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [characters, setCharacters] = useState([]);\n\tconst [isLoading, setisLoading] = useState(true);\n\tconst [query, setQuery] = useState(\"\");\n\tconst cardsPerPage = 12;\n\tuseEffect(() => {\n\t\tconst apiUrl = `https://www.breakingbadapi.com/api/characters?name=${query}`;\n\t\tconst getData = async () => {\n\t\t\tconst resp = await axios.get(apiUrl);\n\t\t\tsetCharacters(resp.data);\n\t\t\tsetisLoading(false);\n\t\t};\n\t\tgetData();\n\t}, [query]);\n\tconst handleSearch = (value) => {\n\t\tsetQuery(value);\n\t};\n\n\t// to get the index of the last card we multiply current page at the beginning is 1 and the limit per page thats 12\n\tconst indexOfLastCard = currentPage * cardsPerPage;\n\t// if we are in the 2 page the indexOfLastCard is 24 and indexOfFirstCard is 24- the limit per page thats 10 so the index of the first card is 12\n\tconst indexOfirstCard = indexOfLastCard - cardsPerPage;\n\t// list of cards that we can show:\n\tconst currentCards = characters.slice(indexOfirstCard, indexOfLastCard);\n\n\t//change page\n\tconst changePage = (pageNumber) => setCurrentPage(pageNumber);\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header handleSearch={handleSearch} />\n\t\t\t<CharactersGrid showSpinner={isLoading} data={currentCards} />\n\t\t\t<Pagination\n\t\t\t\tcardsPerPage={cardsPerPage}\n\t\t\t\ttotalCards={characters.length}\n\t\t\t\tchangePage={changePage}\n\t\t\t\tcurrentPage={currentPage}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}